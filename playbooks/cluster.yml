---
- name: Initial Setup and Configuration
  hosts: all
  gather_facts: false
  become: true
  tasks:
    - name: Wait 300 seconds for port 22
      ansible.builtin.wait_for:

        port: "22"
        host: "{{ (ansible_ssh_host | default(ansible_host)) | default(inventory_hostname) }}"
        search_regex: OpenSSH
        delay: "10"
        timeout: "300"
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ node_hostname }}"

    - name: Add IP to /etc/hosts ### for cluster dns resolution
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item]['ansible_host'] }} {{ hostvars[item]['inventory_hostname'] }}"
        state: present
        backup: true
      loop: "{{ groups['all'] }}"

    - name: Create containerd config file
      ansible.builtin.shell: mkdir -p /etc/containerd && touch /etc/containerd/config.toml

    - name: Include OS-specific installation tasks
      ansible.builtin.include_tasks:
        file: "{{ ansible_distribution }}.yml"


    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        daemon_reload: yes
        state: started
        enabled: yes
    

    - name: Load overlay module
      community.general.modprobe:
        name: overlay
        state: present

    - name: Load br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present



    - name: Apply sysctl params without reboot
      ansible.builtin.command: sysctl --system
    - name: Disable swap on each node
      ansible.builtin.command: swapoff -a
- name: Configure the Master Node
  hosts: master
  become: true
  tasks:
    - name: Init kubeadm
      ansible.builtin.command: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint "{{ansible_host}}:6443"
    - name: Create ~/.kube directory
      ansible.builtin.file:
        path: ~/.kube
        state: directory
        mode: "0755"

    - name: Copy kubeconfig file
      ansible.builtin.shell: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    - name: Set permission on kubeconfig file
      ansible.builtin.shell: sudo chown $(id -u):$(id -g) $HOME/.kube/config
    - name: Install Weavenet Pod Network add-on
      ansible.builtin.command: kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
    - name: Generate token to join worker nodes to cluster
      ansible.builtin.command: sudo kubeadm token create --print-join-command
      register: join_node_token
      delegate_to: controlplane

- name: Join Worker Nodes to cluster
  hosts: workers
  become: true
  tasks:
    - name: Save join token command as variable
      ansible.builtin.set_fact:
        join_node: "{{ hostvars['controlplane'].join_node_token.stdout_lines[0] }}"

    - name: Add worker nodes to cluster
      ansible.builtin.command: "sudo {{ join_node }}"
